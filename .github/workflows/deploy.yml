name: CI/CD - isi_burger Laravel

on:
  push:
    branches:
      - main
      - develop
      - preprod
      - staging
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      IMAGE_NAME: mariama640/isi_burger
      SONAR_PROJECT_KEY: isi_burger
      SONAR_ORG: missmari-dot
      SONAR_HOST: https://sonarcloud.io

    steps:
      - name: 🛎 Cloner le repo
        uses: actions/checkout@v3

      - name: 🔧 Installer PHP & Composer
        run: |
          sudo apt update
          sudo apt install -y php-cli unzip curl php-mbstring php-xml php-bcmath php-curl php-tokenizer php-zip php-sqlite3 php-mysql composer
          php -v
          composer -V

      - name: 📦 Installer les dépendances Laravel
        run: composer install --no-dev --prefer-dist

      - name: 🔑 Générer la clé d'application
        run: php artisan key:generate

      - name: 🔍 Installer SonarScanner
        run: |
          sudo apt update
          sudo apt install -y unzip curl
          curl -fsSL -o sonar-scanner.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-5.0.1.3006-linux.zip
          unzip sonar-scanner.zip
          sudo mv sonar-scanner-5.0.1.3006-linux /opt/sonar-scanner
          echo "/opt/sonar-scanner/bin" >> $GITHUB_PATH
          export PATH="/opt/sonar-scanner/bin:$PATH"
          sonar-scanner --version  # Vérifier l'installation

      - name: 🔍 Vérification SonarQube
        run: sonar-scanner -Dsonar.projectKey=$SONAR_PROJECT_KEY -Dsonar.organization=$SONAR_ORG -Dsonar.host.url=$SONAR_HOST
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: 📂 Stocker les artefacts de build
        uses: actions/upload-artifact@v4
        with:
          name: isi_burger-artifact
          path: .




  # deploy-k8s:
  #   needs: docker
  #   runs-on: ubuntu-latest
  #   env:
  #     IMAGE_NAME: mariama640/isi_burger

  #   steps:
  #     - name: 🛎 Cloner le repo
  #       uses: actions/checkout@v3

  #     - name: 📥 Installer `kubectl`
  #       run: |
  #         curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
  #         chmod +x kubectl
  #         sudo mv kubectl /usr/local/bin/

  #     - name: 🔑 Configurer AWS CLI
  #       run: |
  #         aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
  #         aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #         aws configure set region eu-north-1

  #     - name: 🔑 Mettre à jour le contexte Kubernetes pour EKS
  #       run: |
  #         aws eks update-kubeconfig --name isi-burger-cluster --region eu-north-1
  #         kubectl config current-context

  #     - name: 🚀 Déployer Laravel sur Kubernetes
  #       run: |
  #         kubectl apply -f k8s/namespace.yaml
  #         kubectl apply -f k8s/deployment.yaml
  #         kubectl apply -f k8s/service.yaml
